#!/usr/bin/env ruby
require 'pg'
DB = PG::Connection.new(dbname: 'd50b', user: 'd50b')

# GET TRANSLATED INPUT FILE
raise 'USAGE: import-translation {filename}' unless ARGV[0] && File.exist?(ARGV[0])
text = File.read(ARGV[0])

# show recent file IDs:
res = DB.exec("SELECT id, filename FROM core.translation_files ORDER BY id DESC LIMIT 10")
res.each do |r|
	puts "%d\t%s" % [r['id'], r['filename']]
end

# ask file ID
print "What filename ID # in the database? "
file_id = STDIN.gets.strip

# COMPARE IT WITH DATABASE
# RETURNS TABLE(sortid integer, code char(8), en text, theirs text)
res = DB.exec_params("SELECT * FROM core.txn_compare($1, $2)", [file_id, text])
res.each do |r|
	puts "%d\t%s\t%s" % [r['sortid'], r['en'], r['theirs']]
end

print "\nDOES THAT LOOK RIGHT?  TYPE 'ok' TO CONTINUE: "
exit unless 'ok' == STDIN.gets.strip


